#include <bits/stdc++.h> 
int find_pivot(vector<int>& arr, int n)
{
    int s=0,e=n-1,mid;
    while(s<e)
    {
        mid=s+(e-s)/2;
        if(arr[mid]>=arr[0])
            s=mid+1;
        else
            e=mid;
    }
    return s;
}
int binary_search(vector<int>& arr, int s,int e,int k)
{
    int mid;
    while(s<=e)
    {
        mid=s+(e-s)/2;
        if(arr[mid]==k)
            return mid;
        else if(arr[mid]>k)
            e=mid-1;
        else
            s=mid+1;
    }
    return -1;
}
int findPosition(vector<int>& arr, int n, int k)
{  int pivot=find_pivot(arr,n),res;
   if(k>=arr[pivot] && k<=arr[n-1])
       res=binary_search(arr,pivot,n-1,k);
   else
        res=binary_search(arr,0,pivot-1,k);
    return res;
}

